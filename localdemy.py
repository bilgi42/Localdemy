#!/usr/bin/env python3\n\nimport sys\nimport os\n\n# If running from AppDir/AppImage, adjust paths\nAPP_DIR = os.getenv(\"APPDIR\")\nif APP_DIR:\n    # Add bundled libraries path if needed (linuxdeploy usually handles this)\n    # sys.path.insert(0, os.path.join(APP_DIR, \"usr/lib\"))\n    # Add bundled python site-packages\n    site_packages = os.path.join(APP_DIR, \"usr/lib/python\" + str(sys.version_info.major) + \".\" + str(sys.version_info.minor) + \"/site-packages\")\n    if os.path.exists(site_packages):\n        sys.path.insert(0, site_packages)\n    # Ensure GObject introspection data is found\n    gi_typelib_path = os.path.join(APP_DIR, \"usr/lib/girepository-1.0\")\n    os.environ['GI_TYPELIB_PATH'] = gi_typelib_path + os.pathsep + os.environ.get('GI_TYPELIB_PATH', '')\n    # Ensure GStreamer plugins are found (redundant with AppRun but good practice)\n    gst_plugin_path = os.path.join(APP_DIR, \"usr/lib/gstreamer-1.0\")\n    os.environ['GST_PLUGIN_PATH'] = gst_plugin_path + os.pathsep + os.environ.get('GST_PLUGIN_PATH', '')\n    \n# Make sure the src directory is in the path to find the localdemy module\nscript_dir = os.path.dirname(os.path.abspath(__file__))\n# Go up one level from /usr/bin within the AppDir, or use script_dir if run locally\nif APP_DIR:\n    project_root = os.path.join(APP_DIR, \"usr/bin\") # Localdemy module is inside here now\nelse:\n    project_root = os.path.dirname(script_dir) # Assumes running from project root locally\nsrc_path = os.path.join(project_root, 'src')\nsys.path.insert(0, src_path)\n\n# Now import the application class\ntry:\n    from localdemy.application import LocaldemyApplication\nexcept ModuleNotFoundError:\n    # If running directly from source tree (not AppImage/install)\n    src_path_alt = os.path.abspath(os.path.join(os.path.dirname(__file__), 'src'))\n    if src_path_alt not in sys.path:\n        sys.path.insert(0, src_path_alt)\n    from localdemy.application import LocaldemyApplication\nexcept Exception as e:\n    print(f\"Error importing LocaldemyApplication: {e}\", file=sys.stderr)\n    print(f\"Python Path: {sys.path}\", file=sys.stderr)\n    sys.exit(1)\n\ndef main():\n    \"\"\"Runs the Localdemy application.\"\"\"\n    app = LocaldemyApplication()\n    exit_status = app.run(sys.argv)\n    sys.exit(exit_status)\n\nif __name__ == \"__main__\":\n    main() 